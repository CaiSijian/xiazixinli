// vite.config.ts
import { defineConfig as defineConfig3 } from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/vite/dist/node/index.js";

// vite.config.base.ts
import { defineConfig } from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/vite/dist/node/index.js";
var vite_config_base_default = defineConfig({
  base: "./",
  css: {
    preprocessorOptions: {
      less: {
        math: "always",
        additionalData: `@import "${process.cwd()}/src/assets/style/base.less";`
      }
    }
  }
});

// vite.config.plugin.ts
import { defineConfig as defineConfig2 } from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/vite/dist/node/index.js";
import vue from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/@vitejs/plugin-vue/dist/index.mjs";
import AutoImport from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/unplugin-auto-import/dist/vite.js";
import Components from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/unplugin-vue-components/dist/vite.js";
import { ElementPlusResolver } from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/unplugin-vue-components/dist/resolvers.js";
import { ViteAliases } from "file:///D:/codeAdministration/gitee/xiazixinli/node_modules/vite-aliases/dist/index.js";
var vite_config_plugin_default = defineConfig2({
  plugins: [
    vue(),
    AutoImport({
      imports: ["vue", "vue-router"],
      resolvers: [ElementPlusResolver()],
      dts: "auto-imports.d.ts",
      eslintrc: {
        enabled: false
        // 1、改为true用于生成eslint配置。2、生成后改回false，避免重复生成消耗
      }
    }),
    Components({ resolvers: [ElementPlusResolver()] }),
    ViteAliases()
  ]
});

// vite.config.ts
var vite_config_default = defineConfig3({
  ...vite_config_base_default,
  ...vite_config_plugin_default
});
export {
  vite_config_default as default
};
//# sourceMappingURL=data:application/json;base64,ewogICJ2ZXJzaW9uIjogMywKICAic291cmNlcyI6IFsidml0ZS5jb25maWcudHMiLCAidml0ZS5jb25maWcuYmFzZS50cyIsICJ2aXRlLmNvbmZpZy5wbHVnaW4udHMiXSwKICAic291cmNlc0NvbnRlbnQiOiBbImNvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9kaXJuYW1lID0gXCJEOlxcXFxjb2RlQWRtaW5pc3RyYXRpb25cXFxcZ2l0ZWVcXFxceGlheml4aW5saVwiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9maWxlbmFtZSA9IFwiRDpcXFxcY29kZUFkbWluaXN0cmF0aW9uXFxcXGdpdGVlXFxcXHhpYXppeGlubGlcXFxcdml0ZS5jb25maWcudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L2NvZGVBZG1pbmlzdHJhdGlvbi9naXRlZS94aWF6aXhpbmxpL3ZpdGUuY29uZmlnLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcbmltcG9ydCBiYXNlIGZyb20gJy4vdml0ZS5jb25maWcuYmFzZSdcbmltcG9ydCBwbHVnaW4gZnJvbSAnLi92aXRlLmNvbmZpZy5wbHVnaW4nXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xuICAuLi5iYXNlLFxuICAuLi5wbHVnaW4sXG59KSIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDpcXFxcY29kZUFkbWluaXN0cmF0aW9uXFxcXGdpdGVlXFxcXHhpYXppeGlubGlcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkQ6XFxcXGNvZGVBZG1pbmlzdHJhdGlvblxcXFxnaXRlZVxcXFx4aWF6aXhpbmxpXFxcXHZpdGUuY29uZmlnLmJhc2UudHNcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfaW1wb3J0X21ldGFfdXJsID0gXCJmaWxlOi8vL0Q6L2NvZGVBZG1pbmlzdHJhdGlvbi9naXRlZS94aWF6aXhpbmxpL3ZpdGUuY29uZmlnLmJhc2UudHNcIjtpbXBvcnQgeyBkZWZpbmVDb25maWcgfSBmcm9tICd2aXRlJ1xyXG5leHBvcnQgZGVmYXVsdCBkZWZpbmVDb25maWcoe1xyXG4gICAgYmFzZTogJy4vJyxcclxuICAgIGNzczoge1xyXG4gICAgICAgIHByZXByb2Nlc3Nvck9wdGlvbnM6IHtcclxuICAgICAgICAgICAgbGVzczoge1xyXG4gICAgICAgICAgICAgICAgbWF0aDogJ2Fsd2F5cycsXHJcbiAgICAgICAgICAgICAgICBhZGRpdGlvbmFsRGF0YTogYEBpbXBvcnQgXCIke3Byb2Nlc3MuY3dkKCl9L3NyYy9hc3NldHMvc3R5bGUvYmFzZS5sZXNzXCI7YCxcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICB9XHJcbiAgICB9LFxyXG59KSIsICJjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZGlybmFtZSA9IFwiRDpcXFxcY29kZUFkbWluaXN0cmF0aW9uXFxcXGdpdGVlXFxcXHhpYXppeGlubGlcIjtjb25zdCBfX3ZpdGVfaW5qZWN0ZWRfb3JpZ2luYWxfZmlsZW5hbWUgPSBcIkQ6XFxcXGNvZGVBZG1pbmlzdHJhdGlvblxcXFxnaXRlZVxcXFx4aWF6aXhpbmxpXFxcXHZpdGUuY29uZmlnLnBsdWdpbi50c1wiO2NvbnN0IF9fdml0ZV9pbmplY3RlZF9vcmlnaW5hbF9pbXBvcnRfbWV0YV91cmwgPSBcImZpbGU6Ly8vRDovY29kZUFkbWluaXN0cmF0aW9uL2dpdGVlL3hpYXppeGlubGkvdml0ZS5jb25maWcucGx1Z2luLnRzXCI7aW1wb3J0IHsgZGVmaW5lQ29uZmlnIH0gZnJvbSAndml0ZSdcclxuaW1wb3J0IHZ1ZSBmcm9tICdAdml0ZWpzL3BsdWdpbi12dWUnXHJcbmltcG9ydCBBdXRvSW1wb3J0IGZyb20gJ3VucGx1Z2luLWF1dG8taW1wb3J0L3ZpdGUnXHJcbmltcG9ydCBDb21wb25lbnRzIGZyb20gJ3VucGx1Z2luLXZ1ZS1jb21wb25lbnRzL3ZpdGUnXHJcbmltcG9ydCB7IEVsZW1lbnRQbHVzUmVzb2x2ZXIgfSBmcm9tICd1bnBsdWdpbi12dWUtY29tcG9uZW50cy9yZXNvbHZlcnMnXHJcbmltcG9ydCB7IFZpdGVBbGlhc2VzIH0gZnJvbSAndml0ZS1hbGlhc2VzJ1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgZGVmaW5lQ29uZmlnKHtcclxuICAgIHBsdWdpbnM6IFtcclxuICAgICAgICB2dWUoKSxcclxuICAgICAgICBBdXRvSW1wb3J0KHtcclxuICAgICAgICAgICAgaW1wb3J0czogWyd2dWUnLCAndnVlLXJvdXRlciddLFxyXG4gICAgICAgICAgICByZXNvbHZlcnM6IFtFbGVtZW50UGx1c1Jlc29sdmVyKCldLFxyXG4gICAgICAgICAgICBkdHM6ICdhdXRvLWltcG9ydHMuZC50cycsXHJcbiAgICAgICAgICAgIGVzbGludHJjOiB7XHJcbiAgICAgICAgICAgICAgICBlbmFibGVkOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIC8vIDFcdTMwMDFcdTY1MzlcdTRFM0F0cnVlXHU3NTI4XHU0RThFXHU3NTFGXHU2MjEwZXNsaW50XHU5MTREXHU3RjZFXHUzMDAyMlx1MzAwMVx1NzUxRlx1NjIxMFx1NTQwRVx1NjUzOVx1NTZERWZhbHNlXHVGRjBDXHU5MDdGXHU1MTREXHU5MUNEXHU1OTBEXHU3NTFGXHU2MjEwXHU2RDg4XHU4MDE3XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSxcclxuICAgICAgICBDb21wb25lbnRzKHsgcmVzb2x2ZXJzOiBbRWxlbWVudFBsdXNSZXNvbHZlcigpXSwgfSksXHJcbiAgICAgICAgVml0ZUFsaWFzZXMoKSxcclxuICAgIF0sXHJcbn0pIl0sCiAgIm1hcHBpbmdzIjogIjtBQUE0UyxTQUFTLGdCQUFBQSxxQkFBb0I7OztBQ0FuQixTQUFTLG9CQUFvQjtBQUNuVixJQUFPLDJCQUFRLGFBQWE7QUFBQSxFQUN4QixNQUFNO0FBQUEsRUFDTixLQUFLO0FBQUEsSUFDRCxxQkFBcUI7QUFBQSxNQUNqQixNQUFNO0FBQUEsUUFDRixNQUFNO0FBQUEsUUFDTixnQkFBZ0IsWUFBWSxRQUFRLElBQUksQ0FBQztBQUFBLE1BQzdDO0FBQUEsSUFDSjtBQUFBLEVBQ0o7QUFDSixDQUFDOzs7QUNYeVQsU0FBUyxnQkFBQUMscUJBQW9CO0FBQ3ZWLE9BQU8sU0FBUztBQUNoQixPQUFPLGdCQUFnQjtBQUN2QixPQUFPLGdCQUFnQjtBQUN2QixTQUFTLDJCQUEyQjtBQUNwQyxTQUFTLG1CQUFtQjtBQUU1QixJQUFPLDZCQUFRQyxjQUFhO0FBQUEsRUFDeEIsU0FBUztBQUFBLElBQ0wsSUFBSTtBQUFBLElBQ0osV0FBVztBQUFBLE1BQ1AsU0FBUyxDQUFDLE9BQU8sWUFBWTtBQUFBLE1BQzdCLFdBQVcsQ0FBQyxvQkFBb0IsQ0FBQztBQUFBLE1BQ2pDLEtBQUs7QUFBQSxNQUNMLFVBQVU7QUFBQSxRQUNOLFNBQVM7QUFBQTtBQUFBLE1BRWI7QUFBQSxJQUNKLENBQUM7QUFBQSxJQUNELFdBQVcsRUFBRSxXQUFXLENBQUMsb0JBQW9CLENBQUMsRUFBRyxDQUFDO0FBQUEsSUFDbEQsWUFBWTtBQUFBLEVBQ2hCO0FBQ0osQ0FBQzs7O0FGbkJELElBQU8sc0JBQVFDLGNBQWE7QUFBQSxFQUMxQixHQUFHO0FBQUEsRUFDSCxHQUFHO0FBQ0wsQ0FBQzsiLAogICJuYW1lcyI6IFsiZGVmaW5lQ29uZmlnIiwgImRlZmluZUNvbmZpZyIsICJkZWZpbmVDb25maWciLCAiZGVmaW5lQ29uZmlnIl0KfQo=
